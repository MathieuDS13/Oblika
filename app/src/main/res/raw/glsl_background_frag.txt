#version 300 es
precision mediump float;


//const vec3 colorbg = vec3(0.184, 0.208, 0.259);
const vec3 colorbg = vec3(0.98, 0.98, 1);
const vec3 color1 = vec3(1, 0.42, 0.506);
const vec3 color2 = vec3(1, 0.498, 0.314);
const vec3 color3 = vec3(0.925, 0.8, 0.408);


out vec4 fragColor;
in vec2 uv;

layout(location = 0) uniform vec2 pos;

float rectangleIn(vec2 uv, vec2 pos, float width, float height) {
    width -= 0.05;
    height-= 0.05;

	float t = 1.0;
	if ((uv.x > pos.x - width / 2.0) && (uv.x < pos.x + width / 2.0)
		&& (uv.y > pos.y - height / 2.0) && (uv.y < pos.y + height / 2.0)) {
		t = 0.0;
	}
	return t;
}


float rectangle(vec2 uv, vec2 pos, float width, float height) {
	float t = 0.0;
	if ((uv.x > pos.x - width / 2.0) && (uv.x < pos.x + width / 2.0)
		&& (uv.y > pos.y - height / 2.0) && (uv.y < pos.y + height / 2.0)) {
		t = 1.0 * rectangleIn(uv, pos, width, height);
	}
	return t;
}


void main() {
    vec3 finalColor = colorbg;

	float r = rectangle(uv, pos * 0.7, 0.5, 0.5);
    finalColor = mix(finalColor, color3, r);

    r = rectangle(uv, pos * 0.4, 0.7, 0.7);
    finalColor = mix(finalColor, color2, r);

    r = rectangle(uv, pos * 0.1, 0.9, 0.9);
    finalColor = mix(finalColor, color1, r);

    fragColor = vec4(finalColor, 1.0);
}